swagger: "2.0"
info:
  version: 3.0.0
  title: Website API
  description: >-
    Shiny new Codacy API
  contact:
    name: Team blue
    email: code-blue@codacy.com
    url: https://www.codacy.com
  license:
    name: Codacy. All rights reserved
    url: https://www.codacy.com
schemes:
  - http
#host: app.codacy.com
#basePath: /v3

parameters:
  cursor: &cursorParam
    in: query
    name: cursor
    required: false
    type: string
    description: The cursor for the next page.
  limitParam: &limitParam
    in: query
    name: limit
    required: false
    type: number
    minimum: 1
    maximum: 100
    default: 20
    description: The numbers of items to return.
  sortParam: &sortParam
    in: query
    name: sort
    required: false
    type: string
    description: The default sort order of the results.
  searchParam: &searchParam
    in: query
    name: search
    required: false
    type: string
    description: Filter the results searching by this string.

paths:
  /user:
    get:
      tags:
        - account
      summary: Get the authenticated user
      description: Get the authenticated user
      operationId: getUser
      produces:
        - application/json
      parameters:
        - in: header
          name: accountId
          description: "AccountId"
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UserResponse"

        "401":
          description: "Unauthorized"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/UnauthorizedResponse"

        "500":
          description: "Internal Server Error"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/ApiError"

    delete:
      tags:
        - account
      operationId: deleteUser
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: "ReasonsToDelete"
          required: true
          schema:
            type: array
            items:
              type: string
        - in: header
          name: accountId
          description: "AccountId"
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "403":
          description: "Forbidden"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/ForbiddenResponse"
        "500":
          description: "Internal Server Error"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/ApiError"

    patch:
      tags:
        - account
      operationId: patchUser
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: "UserBody"
          required: true
          schema:
            $ref: "#/definitions/UserBody"
        - in: header
          name: accountId
          description: "AccountId"
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/UserResponse"
        "401":
          description: "Unauthorized"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "403":
          description: "Forbidden"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/ForbiddenResponse"
        "500":
          description: "Internal Server Error"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/ApiError"

  /user/orgs:
    get:
      tags:
        - account
      summary: List organizations for the authenticated user
      description: List organizations for the authenticated user
      operationId: listUserOrganizations
      produces:
        - application/json
      parameters:
        - in: header
          name: accountId
          description: "AccountId"
          required: true
          type: integer
          format: int64
        - *cursorParam
        - *limitParam
        - *sortParam
        - *searchParam
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/OrganizationsListResponse"

        "401":
          description: "Unauthorized"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: "Internal Server Error"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/ApiError"

  /user/integrations:
    get:
      tags:
        - account
      summary: List integrations for the authenticated user
      description: List integrations for the authenticated user
      operationId: listUserIntegrations
      produces:
        - application/json
      parameters:
        - in: header
          name: accountId
          description: "Integration Provider"
          required: true
          type: integer
          format: int64
        - *cursorParam
        - *limitParam
        - *sortParam
        - *searchParam
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/IntegrationsListResponse"
        "401":
          description: "Unauthorized"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "500":
          description: "Internal Server Error"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/ApiError"

  /user/integrations/{provider}:
    delete:
      tags:
        - account
      operationId: deleteIntegration
      produces:
        - application/json
      parameters:
        - in: path
          name: provider
          description: "Integration Provider"
          required: true
          type: string
        - in: header
          name: accountId
          description: "AccountId"
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: "Successful operation"
        "401":
          description: "Unauthorized"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/UnauthorizedResponse"
        "404":
          description: "Not Found"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/NotFoundResponse"
        "500":
          description: "Internal Server Error"
          x-ms-error-response: true
          schema:
            $ref: "#/definitions/ApiError"

  /health:
    get:
      tags:
        - health
      summary: Health check endpoint
      description: Health check endpoint
      operationId: health
      produces:
        - application/json
      responses:
        "200":
          description: "Successful operation"
          schema:
            $ref: "#/definitions/HealthCheck"
          examples:
            application/json: [{ message: "Hello, it's me" }]

definitions:
  HealthCheck:
    type: object
    properties:
      message:
        type: string
    example:
      message: "Hello, it's me"

  # ---- User -------------------------------
  User:
    type: object
    required:
      - username
      - mainEmail
      - otherEmails
      - isAdmin
      - isActive
      - created
    properties:
      username:
        type: string
      name:
        type: string
      mainEmail:
        type: string
      otherEmails:
        type: array
        items:
          type: string
      isAdmin:
        type: boolean
      isActive:
        type: boolean
      created:
        type: integer
        format: int64
        x-scala-type: java.time.Instant
    example:
      username: "FooBar"
      name: "Foo"
      mainEmail: "main@codacy.com"
      otherEmails: ["foo@bar.com"]
      isAdmin: false
      isActive: true
      created: "2019-05-07T14:29:13.430Z"

  UsersListResponse:
    type: object
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/User"

  UserResponse:
    type: object
    properties:
      data:
        $ref: "#/definitions/User"

  UserBody:
    type: object
    properties:
      username:
        type: string
      name:
        type: string
    example:
      username: "FooBar"
      name: "Foo"

  # ---- Organization -----------------------
  Organization:
    type: object
    required:
      - name
      - billingEmail
      - provider
    properties:
      name:
        type: string
      billingEmail:
        type: string
      avatar:
        type: string
      createdAt:
        type: integer
        format: int64
        x-scala-type: java.time.Instant
      provider:
        $ref: "#/definitions/Provider"
      joinMode:
        $ref: "#/definitions/JoinMode"
    example:
      name: "FooOrganization"
      billingEmail: "billing@codacy.com"
      avatar: "someRandomLink.com"
      created: "2019-05-07T14:29:13.430Z"
      provider: "gh"
      joinMode: "auto"

  OrganizationsListResponse:
    type: object
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/Organization"

  OrganizationResponse:
    type: object
    properties:
      data:
        $ref: "#/definitions/Organization"

  # ---- Integration ------------------------
  Integration:
    type: object
    required:
      - name
      - lastTimeAuthenticated
    properties:
      name:
        type: string
      lastTimeAuthenticated:
        type: integer
        format: int64
        x-scala-type: java.time.Instant
    example:
      name: "FooOrganization"
      lastTimeAuthenticated: "2019-05-07T14:29:13.430Z"

  IntegrationsListResponse:
    type: object
    properties:
      pagination:
        $ref: "#/definitions/PaginationInfo"
      data:
        type: array
        items:
          $ref: "#/definitions/Integration"

  IntegrationResponse:
    type: object
    properties:
      data:
        $ref: "#/definitions/Integration"

  # ---- Enums ------------------------------
  Provider:
    type: string
    enum:
      - manual
      - gh
      - bb
      - ghe
      - bbe
      - gle

  JoinMode:
    type: string
    enum:
      - auto
      - adminAuto
      - request

  # ---- Common -----------------------------
  PaginationInfo:
    type: object
    properties:
      nextCursor:
        type: string
      prevCursor:
        type: string
      limit:
        type: number
      total:
        type: number

  # ---- Errors -----------------------------
  ApiErrorCode:
    type: string
    enum:
      - BadRequest
      - Unauthorized
      - NotFound
      - InternalServerError
      - NotImplemented

  ApiError: # 5xx
    type: object
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        $ref: "#/definitions/ApiErrorCode"

  UnauthorizedResponse: #401
    description: Unauthorized
    allOf:
      - $ref: "#/definitions/ApiError"

  ForbiddenResponse: #403
    description: Forbidden
    allOf:
      - $ref: "#/definitions/ApiError"

  NotFoundResponse: #404
    description: Not found
    allOf:
      - $ref: "#/definitions/ApiError"
