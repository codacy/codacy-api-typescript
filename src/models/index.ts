/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";

/**
 * An interface representing HealthCheck.
 */
export interface HealthCheck {
  message?: string;
}

/**
 * An interface representing User.
 */
export interface User {
  username: string;
  name?: string;
  mainEmail: string;
  otherEmails: string[];
  isAdmin: boolean;
  isActive: boolean;
  created: number;
}

/**
 * An interface representing PaginationInfo.
 */
export interface PaginationInfo {
  nextCursor?: string;
  prevCursor?: string;
  limit?: number;
  total?: number;
}

/**
 * An interface representing UsersListResponse.
 */
export interface UsersListResponse {
  pagination?: PaginationInfo;
  data?: User[];
}

/**
 * An interface representing UserResponse.
 */
export interface UserResponse {
  data?: User;
}

/**
 * An interface representing UserBody.
 */
export interface UserBody {
  username?: string;
  name?: string;
}

/**
 * An interface representing Organization.
 */
export interface Organization {
  name: string;
  billingEmail: string;
  avatar?: string;
  createdAt?: number;
  /**
   * Possible values include: 'manual', 'gh', 'bb', 'ghe', 'bbe', 'gle'
   */
  provider: Provider;
  /**
   * Possible values include: 'auto', 'adminAuto', 'request'
   */
  joinMode?: JoinMode;
}

/**
 * An interface representing OrganizationsListResponse.
 */
export interface OrganizationsListResponse {
  pagination?: PaginationInfo;
  data?: Organization[];
}

/**
 * An interface representing OrganizationResponse.
 */
export interface OrganizationResponse {
  data?: Organization;
}

/**
 * An interface representing Integration.
 */
export interface Integration {
  name: string;
  lastTimeAuthenticated: number;
}

/**
 * An interface representing IntegrationsListResponse.
 */
export interface IntegrationsListResponse {
  pagination?: PaginationInfo;
  data?: Integration[];
}

/**
 * An interface representing IntegrationResponse.
 */
export interface IntegrationResponse {
  data?: Integration;
}

/**
 * An interface representing ApiError.
 */
export interface ApiError {
  message: string;
  /**
   * Possible values include: 'BadRequest', 'Unauthorized', 'NotFound', 'InternalServerError',
   * 'NotImplemented'
   */
  code: Code;
}

/**
 * Unauthorized
 */
export interface UnauthorizedResponse extends ApiError {
}

/**
 * Forbidden
 */
export interface ForbiddenResponse extends ApiError {
}

/**
 * Not found
 */
export interface NotFoundResponse extends ApiError {
}

/**
 * An interface representing WebsiteAPIOptions.
 */
export interface WebsiteAPIOptions extends ServiceClientOptions {
  /**
   * The cursor for the next page.
   */
  cursor?: string;
  /**
   * The numbers of items to return. Default value: 20.
   */
  limit?: number;
  /**
   * The default sort order of the results.
   */
  sort?: string;
  /**
   * Filter the results searching by this string.
   */
  search?: string;
  baseUri?: string;
}

/**
 * Optional Parameters.
 */
export interface WebsiteAPIListUserOrganizationsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The cursor for the next page.
   */
  cursor?: string;
  /**
   * The numbers of items to return. Default value: 20.
   */
  limit?: number;
  /**
   * The default sort order of the results.
   */
  sort?: string;
  /**
   * Filter the results searching by this string.
   */
  search?: string;
}

/**
 * Optional Parameters.
 */
export interface WebsiteAPIListUserIntegrationsOptionalParams extends msRest.RequestOptionsBase {
  /**
   * The cursor for the next page.
   */
  cursor?: string;
  /**
   * The numbers of items to return. Default value: 20.
   */
  limit?: number;
  /**
   * The default sort order of the results.
   */
  sort?: string;
  /**
   * Filter the results searching by this string.
   */
  search?: string;
}

/**
 * Defines values for Provider.
 * Possible values include: 'manual', 'gh', 'bb', 'ghe', 'bbe', 'gle'
 * @readonly
 * @enum {string}
 */
export type Provider = 'manual' | 'gh' | 'bb' | 'ghe' | 'bbe' | 'gle';

/**
 * Defines values for JoinMode.
 * Possible values include: 'auto', 'adminAuto', 'request'
 * @readonly
 * @enum {string}
 */
export type JoinMode = 'auto' | 'adminAuto' | 'request';

/**
 * Defines values for Code.
 * Possible values include: 'BadRequest', 'Unauthorized', 'NotFound', 'InternalServerError',
 * 'NotImplemented'
 * @readonly
 * @enum {string}
 */
export type Code = 'BadRequest' | 'Unauthorized' | 'NotFound' | 'InternalServerError' | 'NotImplemented';

/**
 * Contains response data for the getUser operation.
 */
export type GetUserResponse = UserResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserResponse;
    };
};

/**
 * Contains response data for the patchUser operation.
 */
export type PatchUserResponse = UserResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserResponse;
    };
};

/**
 * Contains response data for the listUserOrganizations operation.
 */
export type ListUserOrganizationsResponse = OrganizationsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: OrganizationsListResponse;
    };
};

/**
 * Contains response data for the listUserIntegrations operation.
 */
export type ListUserIntegrationsResponse = IntegrationsListResponse & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: IntegrationsListResponse;
    };
};

/**
 * Contains response data for the health operation.
 */
export type HealthResponse = HealthCheck & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: HealthCheck;
    };
};
